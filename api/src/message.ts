import axios from 'axios'
import { Message, TemplateMessage, TextMessage } from '@line/bot-sdk'
import { userData, userParcel, allParcel } from './firestoreoperation'

const baseUrl = 'https://parcetrace.vercel.app/'
const parcelPlaceholder = 'https://firebasestorage.googleapis.com/v0/b/parcetrace.appspot.com/o/parcelplaceholder.jpg?alt=media&token=41e47102-a5e0-4308-a7c0-b3642293d1ce'

async function sendMessage(message: Message, channelAccessToken: string, userId: string) {
    const headers = { 'Authorization': `Bearer ${channelAccessToken}`, 'Content-Type': 'application/json' }
    const body = {
        to: userId,
        messages: [message],
    }
    return axios.post('https://api.line.me/v2/bot/message/push', body, { headers: headers })
}

const localeDateString = (date: number) => {
    let epdate = new Date(date)
    return epdate.toLocaleDateString("th-TH", {
        year: "numeric",
        month: "short",
        day: "numeric",
        hour: "numeric",
        minute: "numeric",
    })
}

export async function sendRegistrationConfirmMessage(userId: string, channelAccessToken: string, userData: userData) {
    const message: TextMessage = { type: 'text', text: `‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ßüóÉÔ∏è\n\n‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö\n\n‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á: ${userData.name}\n‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•: ${userData.surname}\n‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå: ${userData.phoneNumber}\n‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á: ${userData.room}` }
    return sendMessage(message, channelAccessToken, userId)
}

export async function sendGreetingMessage(userId: string, channelAccessToken: string, displayName: string) {
    const greetingMessage: TextMessage = { type: 'text', text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${displayName}!\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‚ò∫Ô∏èüéâ\n\n ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á üëá\n ${baseUrl}regis?userId=${userId}` }
    return sendMessage(greetingMessage, channelAccessToken, userId)
}

export async function sendParcelNotificationMessage(userId: string, channelAccessToken: string, parcelData: userParcel) {
    const message: TextMessage = { type: 'text', text: `üîî ‡∏Å‡∏¥‡πä‡∏á‡∏Å‡πà‡∏≠‡∏á ‡∏°‡∏µ‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏°‡∏≤‡∏™‡πà‡∏á‡∏Ñ‡πâ‡∏≤‡∏öüì¶\n\n‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á: ${parcelData.sender}\n‡∏à‡∏∏‡∏î‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏: ${parcelData.location}\n\n‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏•‡∏¥‡πâ‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏•‡∏á‡πÑ‡∏õ‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÅ‡∏•‡πâ‡∏ß\n${baseUrl}confirmation?pid=${parcelData.parcelId}` }
    return sendMessage(message, channelAccessToken, userId)
}

export async function sendParcelNotificationMessageNew(userId: string, channelAccessToken: string, parcelData: userParcel) {
    const message: TemplateMessage = {
        "type": "template",
        "altText": `‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏à‡∏≤‡∏Å ${parcelData.sender}`,
        "template": {
          "type": "buttons",
          "imageAspectRatio": "rectangle",
          "imageSize": "cover",
          "imageBackgroundColor": "#FFFFFF",
          "title": "‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏°‡∏≤‡∏™‡πà‡∏á!",
          "text": `‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á: ${parcelData.sender}\n‡∏à‡∏∏‡∏î‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏: ${parcelData.location}`,
          "actions": [
            {
              "type": "uri",
              "label": "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏",
              "uri": `${baseUrl}confirmation?pid=${parcelData.parcelId}`
            }/* ,
            {
                "type": "uri",
                "label": "‡∏î‡∏π‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏û‡∏±‡∏™‡∏î‡∏∏",
                "uri": `${parcelPlaceholder}`
              } */
          ]
        }
      }
    return sendMessage(message, channelAccessToken, userId)
}

export default { sendRegistrationConfirmMessage, sendGreetingMessage, sendParcelNotificationMessage }